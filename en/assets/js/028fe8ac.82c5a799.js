"use strict";(self.webpackChunk_tkeel_docs=self.webpackChunk_tkeel_docs||[]).push([[9129],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),i=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},c=function(e){var t=i(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=i(n),m=o,b=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(b,p(p({ref:t},c),{},{components:n})):r.createElement(b,p({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,p=new Array(a);p[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,p[1]=s;for(var i=2;i<a;i++)p[i]=n[i];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},95005:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>i});var r=n(87462),o=(n(67294),n(3905));const a={title:"Event",sidebar_position:30},p=void 0,s={unversionedId:"developer_cookbook/core/specs/event",id:"developer_cookbook/core/specs/event",title:"Event",description:"Core \u4f7f\u7528\u5f00\u6e90\u6d88\u606f\u89c4\u8303 CloudEvents\uff0c\u7528\u4e8e Core \u6d88\u606f\u7684\u8f93\u5165\u548c\u8f93\u51fa\u3002",source:"@site/docs/developer_cookbook/core/specs/event.md",sourceDirName:"developer_cookbook/core/specs",slug:"/developer_cookbook/core/specs/event",permalink:"/en/developer_cookbook/core/specs/event",draft:!1,editUrl:"https://github.com/tkeel-io/docs/tree/main/docs/developer_cookbook/core/specs/event.md",tags:[],version:"current",lastUpdatedAt:1643106453,formattedLastUpdatedAt:"Jan 25, 2022",sidebarPosition:30,frontMatter:{title:"Event",sidebar_position:30},sidebar:"tutorialSidebar",previous:{title:"Dispatch",permalink:"/en/developer_cookbook/core/specs/dispatch"},next:{title:"Cache",permalink:"/en/developer_cookbook/core/specs/cache"}},l={},i=[{value:"Examples",id:"examples",level:2},{value:"Exaple for dapr-pubsub.",id:"exaple-for-dapr-pubsub",level:3},{value:"\u4f18\u5316",id:"\u4f18\u5316",level:2}],c={toc:i};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Core \u4f7f\u7528\u5f00\u6e90\u6d88\u606f\u89c4\u8303 ",(0,o.kt)("inlineCode",{parentName:"p"},"CloudEvents"),"\uff0c\u7528\u4e8e Core \u6d88\u606f\u7684\u8f93\u5165\u548c\u8f93\u51fa\u3002"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"docs: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/cloudevents/spec"},"https://github.com/cloudevents/spec"))),(0,o.kt)("p",null,"\u5728 Event \u4e2d\u5b9e\u4f53\u5c5e\u6027\u6570\u636e\u88ab\u5e73\u94fa\uff0c\u90e8\u5206\u5c5e\u6027\u5b57\u6bb5 Core \u4fdd\u7559\uff0c\u8be6\u60c5\u89c1\uff1a",(0,o.kt)("a",{parentName:"p",href:"/en/developer_cookbook/core/specs/entity#%E5%AE%9E%E4%BD%93%E4%BF%9D%E7%95%99%E5%AD%97%E6%AE%B5"},"\u5b9e\u4f53\u5c5e\u6027\u4fdd\u7559\u5b57\u6bb5"),"\u3002"),(0,o.kt)("p",null,"\u6211\u4eec\u5728 Event \u7684 Header \u4e2d\u5b9a\u4e49\u4e86\u90e8\u5206\u5b57\u6bb5\u7528\u4e8e\u63cf\u8ff0\u4e8b\u4ef6\u6216\u5b9e\u4f53\uff1a"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"\u540d\u79f0"),(0,o.kt)("th",{parentName:"tr",align:null},"\u63cf\u8ff0"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"extenid"),(0,o.kt)("td",{parentName:"tr",align:null},"\u5b9e\u4f53\u7684ID")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"extentype"),(0,o.kt)("td",{parentName:"tr",align:null},"\u5b9e\u4f53\u7684\u7c7b\u578b")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"extowner"),(0,o.kt)("td",{parentName:"tr",align:null},"\u5b9e\u4f53\u7684\u6240\u6709\u8005")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"extsource"),(0,o.kt)("td",{parentName:"tr",align:null},"\u5b9e\u4f53\u7684Source\u5b57\u6bb5")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"extmsgid"),(0,o.kt)("td",{parentName:"tr",align:null},"\u6d88\u606f\u7684ID")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"extsender"),(0,o.kt)("td",{parentName:"tr",align:null},"\u6d88\u606f\u7684\u53d1\u9001\u8005")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"extreceiver"),(0,o.kt)("td",{parentName:"tr",align:null},"\u6d88\u606f\u7684\u63a5\u53d7\u8005")))),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"sdk docs: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/cloudevents/sdk-go"},"https://github.com/cloudevents/sdk-go"))),(0,o.kt)("h3",{id:"exaple-for-dapr-pubsub"},"Exaple for dapr-pubsub."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Publish Event:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "context"\n    "log"\n    "testing"\n\n    cloudevents "github.com/cloudevents/sdk-go"\n    daprSDK "github.com/dapr/go-sdk/client"\n)\n\n\nfunc main() {\n    // create dapr client.\n    daprClient, err := daprSDK.NewClient()\n    if nil != err {\n        log.Fatal(err)\n    }\n    // create an event.\n    ev := cloudevents.NewEvent()\n\n    ev.SetID("uuid-123")\n    ev.SetType("publish")\n    ev.SetSource("device-manager")\n    ev.SetDataContentType(cloudevents.ApplicationJSON)\n    ev.SetData(map[string]interface{}{\n        "id":     "device123",\n        "type":   "DEVICE",\n        "owner":  "admin",\n        "source": "device-manager",\n        "temp":   20,\n    })\n\n    // check event.\n    if nil != ev.Validate() {\n        log.Fatal(err)\n    }\n\n    // set some information for component.\n    metadata := make(map[string]string)\n\n    daprClient.PublishEvent(\n        context.Background(),\n        "pubsubName", "topicName", ev,\n        daprSDK.PublishEventWithMetadata(metadata),\n        daprSDK.PublishEventWithContentType(cloudevents.ApplicationJSON))\n}\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Receive Event:")),(0,o.kt)("p",null,"dapr \u7684 pubsub \u57fa\u672c\u9075\u5faa CloudEvents \u89c4\u8303\uff0c\u901a\u8fc7 http \u7aef\u70b9\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a Event."),(0,o.kt)("p",null,"\u5b9a\u4e49\u7528\u4e8e\u89e3\u6790 http \u8bf7\u6c42 body \u4e2d Event \u7684\u7ed3\u6784\u4f53\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'type TopicEventRequest struct {\n    state         protoimpl.MessageState\n    sizeCache     protoimpl.SizeCache\n    unknownFields protoimpl.UnknownFields\n\n    Meta       *Metadata      `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`\n    Data       *_struct.Value `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`\n    DataBase64 string         `protobuf:"bytes,7,opt,name=data_base64,json=dataBase64,proto3" json:"data_base64,omitempty"`\n    RawData    []byte         `protobuf:"bytes,8,opt,name=raw_data,json=rawData,proto3" json:"raw_data,omitempty"`\n}\n\ntype Metadata struct {\n    Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`\n    Specversion     string `protobuf:"bytes,2,opt,name=specversion,proto3" json:"specversion,omitempty"`\n    Type            string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`\n    Source          string `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`\n    Datacontenttype string `protobuf:"bytes,5,opt,name=datacontenttype,proto3" json:"datacontenttype,omitempty"`\n    Subject         string `protobuf:"bytes,9,opt,name=subject,proto3" json:"subject,omitempty"`\n    Topic           string `protobuf:"bytes,10,opt,name=topic,proto3" json:"topic,omitempty"`\n    Pubsubname      string `protobuf:"bytes,11,opt,name=pubsubname,proto3" json:"pubsubname,omitempty"`\n}\n')),(0,o.kt)("p",null,"\u89e3\u6790 Event\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'func (h *TopicHTTPHandler) TopicEventHandler(req *go_restful.Request, resp *go_restful.Response) {\n    in := TopicEventRequest{} \n    defer req.Request.Body.Close()\n    bytes,err:= ioutil.ReadAll(req.Request.Body)\n    if nil != err {\n        tErr := errors.FromError(err)\n        httpCode := errors.GRPCToHTTPStatusCode(tErr.GRPCStatus().Code())\n        resp.WriteErrorString(httpCode, tErr.Message)\n        return\n    }\n\n\n    res := gjson.GetBytes(bytes, "data")\n    in.RawData = []byte(res.String())\n\n    res =  gjson.GetBytes(bytes, "data_base64")\n    if res.Type != gjson.Null {\n        // decode base64.\n        base64.StdEncoding.Decode(in.RawData, []byte(res.String()))\n    }\n\n    meta := Metadata{}\n    if err = json.Unmarshal(bytes, &meta); nil != err {\n        tErr := errors.FromError(err)\n        httpCode := errors.GRPCToHTTPStatusCode(tErr.GRPCStatus().Code())\n        resp.WriteErrorString(httpCode, tErr.Message)\n        return\n    }\n')),(0,o.kt)("p",null,"\u4ece ",(0,o.kt)("inlineCode",{parentName:"p"},"TopicEventRequest")," \u4e2d\u89e3\u6790\u6211\u4eec\u7684 CloudEvent\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'func HandleEvent(ctx context.Context, req *pb.TopicEventRequest) (out *pb.TopicEventResponse, err error) {\n    // parse CloudEvent from pb.TopicEventRequest.\n    log.Debug("received TopicEvent", zfield.ID(req.Meta.Id), zfield.Spec(req.Meta.Specversion), zfield.Type(req.Meta.Type), zfield.Source(req.Meta.Source),\n        zfield.Topic(req.Meta.Topic), zfield.Pubsub(req.Meta.Pubsubname), zap.String("subject", req.Meta.Subject), zap.String("contenttype", req.Meta.Datacontenttype))\n\n    ev := cloudevents.NewEvent()\n    err = ev.UnmarshalJSON(req.RawData)\n    if nil != err {\n        log.Warn("data must be CloudEvents spec", zap.String("id", req.Meta.Id), zap.Any("event", req))\n        return &pb.TopicEventResponse{Status: SubscriptionResponseStatusDrop}, nil\n    }\n\n    // dispatch message.\n    groupName := consumerGroup(req.Meta.Pubsubname, req.Meta.Topic)\n\n    lock.RLock()\n    for _, consumer := range consumers[groupName] {\n        consumer.handler(ctx, ev)\n        log.Debug("handle event", zfield.ReqID(req.Meta.Id), zap.Any("meta", req.Meta))\n    }\n    lock.RUnlock()\n\n    return &pb.TopicEventResponse{Status: SubscriptionResponseStatusSuccess}, nil\n}\n')),(0,o.kt)("h2",{id:"\u4f18\u5316"},"\u4f18\u5316"),(0,o.kt)("p",null,"\u5148\u9636\u6bb5 dapr/",(0,o.kt)("a",{parentName:"p",href:"mailto:go-sdk@1.3"},"go-sdk@1.3")," \u6682\u65f6\u4e0d\u652f\u6301\u5bf9 Event \u7684 Attributes\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5d4c\u5957\u4e24\u5c42 Event\uff0c\u4e0d\u8fc7 dapr \u7684 EventCloud \u7684\u652f\u6301\u8fd8\u5728\u6301\u7eed\u66f4\u65b0\u8fc7\uff0c\u540e\u671f\u6211\u4eec\u8ddf\u8fdb\u3002"))}u.isMDXComponent=!0}}]);